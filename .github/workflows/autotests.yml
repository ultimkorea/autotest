name: Tests

on:
  push

permissions:
  id-token: write
  contents: read
  pages: write

jobs:
  history-update:
    runs-on: ubuntu-latest
    name: download history
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: > 
          ART_ID=$(curl -L
          -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28"
          "https://api.github.com/repos/ultimkorea/autotest/actions/artifacts?name=allure-results" |
          python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          && 
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/ultimkorea/autotest/actions/artifacts/$ART_ID/zip 
          -o artifacts.zip
          &&
          REPORT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/ultimkorea/autotest/actions/artifacts?name=github-pages" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/ultimkorea/autotest/actions/artifacts/$REPORT_ID/zip 
          -o pages.zip
      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1



  tests:
    runs-on: ubuntu-latest
    needs: history-update
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install Chrome
      run: sudo apt-get install google-chrome-stable
    - name: Install Dependencies
      run: pip install -r requirements.txt
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v4
    - name: Run all tests
      run: pytest --alluredir=allure_results
    - name: save allure results
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path:
          allure_results
        retention-days: 1

  make-report:
    runs-on: ubuntu-latest
    needs: tests
    name: Make allure reports
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'
      - run: sudo apt install default-jre
      - run: sudo curl -sLo allure_2.30.0-1_all.deb https://github.com/allure-framework/allure2/releases/download/2.30.0/allure_2.30.0-1_all.deb
      - run: sudo dpkg -i allure_2.30.0-1_all.deb
      - name: download artefacts
        uses: actions/download-artifact@v4
      - run: allure generate -c allure-results -o _site
      - name: save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path:
            _site
          retention-days: 1


  publish-report:
    runs-on: ubuntu-latest
    needs: make-report
    name: Publication report
    steps:
      - name: download artefacts
        uses: actions/download-artifact@v4
      - name: upload artifact pages
        uses: actions/upload-pages-artifact@v4
      - name: deploy pages
        id: deployment
        uses: actions/deploy-pages@v4
